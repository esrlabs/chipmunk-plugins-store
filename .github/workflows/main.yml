name: Building

on:
    push:
        branches:
            - master # Push events on master branch
        tags:
            - "*"

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            max-parallel: 3
            matrix:
                os: [ubuntu-latest, macOS-latest, windows-latest]
                rust: [stable]
        steps:
            - name: Checkout
              uses: actions/checkout@v1
            - name: Install windows python
              uses: actions/setup-python@v1
              if: startsWith(matrix.os, 'windows')
              with:
                  python-version: "2.7"
                  architecture: "x64" # (x64 or x86)
            - name: install ruby
              uses: actions/setup-ruby@v1
              with:
                  ruby-version: "2.x"
            - name: install dotenv
              run: gem install dotenv
            - name: install octokit
              run: gem install octokit
            - name: install node
              uses: actions/setup-node@master
              with:
                  node-version: "14.17.3"
            - name: install typescript
              if: "!startsWith(matrix.os, 'windows')"
              run: npm install --global typescript@4.1.3
            - name: setup keychain for signing and notarising
              if: runner.os == 'macOS'
              env:
                  KEYCHAIN_NAME: "build.keychain"
                  CSC_LINK: ${{ secrets.CSC_LINK }}
                  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                  KEYCHAIN_PWD: ${{ secrets.KEYCHAIN_PWD }}
              run: |
                  security create-keychain -p "$KEYCHAIN_PWD" "$KEYCHAIN_NAME"
                  security default-keychain -s "$KEYCHAIN_NAME"
                  certfile="${HOME}/buildcert.p12"
                  echo "$CSC_LINK" | base64 -d > "$certfile"
                  security import \
                    "$certfile" \
                    -P "$CSC_KEY_PASSWORD" \
                    -A \
                    -k "$KEYCHAIN_NAME"
                  rm "$certfile"
                  security set-key-partition-list \
                    -S 'apple:' \
                    -s \
                    -k "$KEYCHAIN_PWD" \
                    "$KEYCHAIN_NAME"
            - name: build plugins
              run: rake build --trace
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GITHUB_LOGIN: ${{ secrets.GITHUB_LOGIN }}
                  GITHUB_PASW: ${{ secrets.GITHUB_PASW }}
                  KEYCHAIN_NAME: "build.keychain"
                  CSC_LINK: ${{ secrets.CSC_LINK }}
                  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                  APPLEID: ${{ secrets.APPLEID }}
                  APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
                  SIGNING_ID: ${{ secrets.SIGNING_ID }}
                  KEYCHAIN_PWD: ${{ secrets.KEYCHAIN_PWD }}
                  SKIP_NOTARIZE: ${{ secrets.SKIP_NOTARIZE }}
            - name: Release
              uses: meatlink/action-gh-release@fix-econnreset
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: |
                      ./releases/*.tgz
                      ./releases/*.json
                  draft: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
